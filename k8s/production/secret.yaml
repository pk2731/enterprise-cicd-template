apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: production
  labels:
    app: yourapp
    environment: production
type: Opaque
data:
  # NOTE: All values must be base64 encoded
  # Use: echo -n "your-secret-value" | base64
  
  # Database Secrets
  DATABASE_URL: "REPLACE_WITH_BASE64_ENCODED_DATABASE_URL"
  DB_PASSWORD: "REPLACE_WITH_BASE64_ENCODED_DB_PASSWORD"
  
  # Redis Secrets
  REDIS_URL: "REPLACE_WITH_BASE64_ENCODED_REDIS_URL"
  REDIS_PASSWORD: "REPLACE_WITH_BASE64_ENCODED_REDIS_PASSWORD"
  
  # JWT Secrets
  JWT_SECRET: "REPLACE_WITH_BASE64_ENCODED_JWT_SECRET"
  JWT_REFRESH_SECRET: "REPLACE_WITH_BASE64_ENCODED_JWT_REFRESH_SECRET"
  
  # API Keys
  EXTERNAL_API_KEY: "REPLACE_WITH_BASE64_ENCODED_EXTERNAL_API_KEY"
  STRIPE_SECRET_KEY: "REPLACE_WITH_BASE64_ENCODED_STRIPE_SECRET_KEY"
  
  # Encryption Keys
  ENCRYPTION_KEY: "REPLACE_WITH_BASE64_ENCODED_ENCRYPTION_KEY"
  
  # Third-party Service Keys
  AWS_ACCESS_KEY_ID: "REPLACE_WITH_BASE64_ENCODED_AWS_ACCESS_KEY"
  AWS_SECRET_ACCESS_KEY: "REPLACE_WITH_BASE64_ENCODED_AWS_SECRET_KEY"
  SENDGRID_API_KEY: "REPLACE_WITH_BASE64_ENCODED_SENDGRID_API_KEY"
  
  # Session Secret
  SESSION_SECRET: "REPLACE_WITH_BASE64_ENCODED_SESSION_SECRET"

---
# Docker registry secret for pulling private images
apiVersion: v1
kind: Secret
metadata:
  name: ghcr-secret
  namespace: production
  labels:
    app: yourapp
    environment: production
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: "REPLACE_WITH_BASE64_ENCODED_DOCKER_CONFIG_JSON"
  
# To generate the docker config JSON:
# kubectl create secret docker-registry ghcr-secret \
#   --docker-server=ghcr.io \
#   --docker-username=YOUR_GITHUB_USERNAME \
#   --docker-password=YOUR_GITHUB_PERSONAL_ACCESS_TOKEN \
#   --docker-email=YOUR_EMAIL \
#   --dry-run=client -o yaml | grep '.dockerconfigjson:' | cut -d: -f2 | tr -d ' '